++//Provider

provider "aws" { 
    access_key = "${var.AWS_ACCESS_KEY}"
    secret_key = "${var.AWS_SECRET_KEY}"
    region = "${var.aws_region}"
}


//Resources

resource "aws_launch_configuration" "launchconfig" {
  
  	image_id      = "${lookup(var.AMIS, var.aws_region)}"
  	instance_type = "t2.micro"
 	key_name      = "${aws_key_pair.keypair.key_name}"
	security_groups      = ["${aws_security_group.instance.id}"]
  
}


resource "aws_elb" "elb" {
  
 listener {
    instance_port 	= 80
    instance_protocol 	= "http"
    lb_port 		= 80
    lb_protocol 	= "http"
  }
  health_check {
    timeout 		= 3
    target 		= "HTTP:80/"
    interval 		= 30
  }

  cross_zone_load_balancing 	= true
  connection_draining 		= true
  connection_draining_timeout 	= 400
}


resource "aws_key_pair" "keypair" {
 	 key_name 	= "keypair"
  	 public_key 	= "${var.public_key}"
}


resource "aws_vpc" "main" {
    cidr_block = "10.0.0.0/16"
    enable_dns_support = "true"
    enable_dns_hostnames = "true"
}

resource "aws_security_group" "instance" {
  vpc_id = "${aws_vpc.main.id}"
  egress {
      from_port = 0
      to_port = 0
      protocol = "-1"
      cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
      from_port = 22
      to_port = 22
      protocol = "tcp"
      cidr_blocks = ["0.0.0.0/0"]
  } 

  ingress {
      from_port = 80
      to_port = 80
      protocol = "tcp"
      security_groups = ["${aws_security_group.elb-securitygroup.id}"]
  }

resource "aws_security_group" "elb-securitygroup" {
  vpc_id = "${aws_vpc.main.id}"
  egress {
      from_port = 0
      to_port = 0
      protocol = "-1"
      cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
      from_port = 80
      to_port = 80
      protocol = "tcp"
      cidr_blocks = ["0.0.0.0/0"]
  } 
}

resource "aws_subnet" "main-public-1" {
    vpc_id = "${aws_vpc.main.id}"
    cidr_block = "10.0.1.0/24"
    map_public_ip_on_launch = "true"
    availability_zone = "eu-west-1a"

    tags {
        Name = "main-public-1"
    }
}

resource "aws_route_table" "main-public" {
    vpc_id = "${aws_vpc.main.id}"
    route {
        cidr_block = "0.0.0.0/0"
        gateway_id = "${aws_internet_gateway.main-gw.id}"
    }

    tags {
        Name = "main-public-1"
    }
}

resource "aws_internet_gateway" "main-gw" {
    vpc_id = "${aws_vpc.main.id}"

    tags {
        Name = "main"
    }
}

//Output

output "ELB" {
	value = "${aws_elb.elb.dns_name}"
}


   
//variables

variable "aws_region" {
  default = "eu-west-1"
}
variable "private_key" {
  default = "mykey"
}
variable "public_key" {
  default = "mykey.pub"
}
variable "AMIS" {
  type = "map"
  default = {
    us-east-1 = "ami-13acfdsa"
    us-west-2 = "ami-sdfd1233"
    eu-west-1 = "ami-234dfasd"
  }
}
variable "AWS_ACCESS_KEY" {}
variable "AWS_SECRET_KEY" {}